// Generated by psc-bundle 0.7.3.0
var PS = { };
(function(exports) {
  /* global exports */
  "use strict";

  //- Monoid ---------------------------------------------------------------------

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  //- Semiring -------------------------------------------------------------------

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };

  //- Eq -------------------------------------------------------------------------

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  //- Ord ------------------------------------------------------------------------

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x > y ? gt : eq;
          };
        };
      };
    };
  };

  //- BooleanAlgebra -------------------------------------------------------------

  exports.boolOr = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolAnd = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };

  //- Show -----------------------------------------------------------------------

  exports.showIntImpl = function (n) {
    return n.toString();
  };

})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Prelude"];
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
      this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
      this.id = id;
  };
  var Functor = function (map) {
      this.map = map;
  };
  var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.apply = apply;
  };
  var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.pure = pure;
  };
  var Bind = function (__superclass_Prelude$dotApply_0, bind) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.bind = bind;
  };
  var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
      this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
  };
  var Semigroup = function (append) {
      this.append = append;
  };
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var Ring = function (__superclass_Prelude$dotSemiring_0, sub) {
      this["__superclass_Prelude.Semiring_0"] = __superclass_Prelude$dotSemiring_0;
      this.sub = sub;
  };
  var Eq = function (eq) {
      this.eq = eq;
  };
  var Ord = function (__superclass_Prelude$dotEq_0, compare) {
      this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
      this.compare = compare;
  };
  var Bounded = function (bottom, top) {
      this.bottom = bottom;
      this.top = top;
  };
  var BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {
      this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
      this.conj = conj;
      this.disj = disj;
      this.not = not;
  };
  var Show = function (show) {
      this.show = show;
  };
  var zero = function (dict) {
      return dict.zero;
  };
  var unsafeCompare = $foreign.unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
  var unit = {};
  var top = function (dict) {
      return dict.top;
  };
  var sub = function (dict) {
      return dict.sub;
  };
  var $minus = function (__dict_Ring_0) {
      return sub(__dict_Ring_0);
  };
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var semigroupString = new Semigroup($foreign.concatString);
  var pure = function (dict) {
      return dict.pure;
  };
  var $$return = function (__dict_Applicative_2) {
      return pure(__dict_Applicative_2);
  };
  var otherwise = true;
  var one = function (dict) {
      return dict.one;
  };
  var not = function (dict) {
      return dict.not;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $less$dollar$greater = function (__dict_Functor_5) {
      return map(__dict_Functor_5);
  };
  var id = function (dict) {
      return dict.id;
  };
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var eqNumber = new Eq($foreign.refEq);
  var ordNumber = new Ord(function () {
      return eqNumber;
  }, unsafeCompare);
  var eqBoolean = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  var $eq$eq = function (__dict_Eq_7) {
      return eq(__dict_Eq_7);
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var $$const = function (a) {
      return function (_30) {
          return a;
      };
  };
  var $$void = function (__dict_Functor_12) {
      return function (fa) {
          return $less$dollar$greater(__dict_Functor_12)($$const(unit))(fa);
      };
  };
  var conj = function (dict) {
      return dict.conj;
  };
  var compose = function (dict) {
      return dict.compose;
  };
  var $less$less$less = function (__dict_Semigroupoid_14) {
      return compose(__dict_Semigroupoid_14);
  };
  var compare = function (dict) {
      return dict.compare;
  };
  var $greater = function (__dict_Ord_19) {
      return function (a1) {
          return function (a2) {
              var _469 = compare(__dict_Ord_19)(a1)(a2);
              if (_469 instanceof GT) {
                  return true;
              };
              return false;
          };
      };
  };
  var categoryFn = new Category(function () {
      return semigroupoidFn;
  }, function (x) {
      return x;
  });
  var boundedBoolean = new Bounded(false, true);
  var bottom = function (dict) {
      return dict.bottom;
  };
  var boundedFn = function (__dict_Bounded_21) {
      return new Bounded(function (_56) {
          return bottom(__dict_Bounded_21);
      }, function (_55) {
          return top(__dict_Bounded_21);
      });
  };
  var booleanAlgebraFn = function (__dict_BooleanAlgebra_22) {
      return new BooleanAlgebra(function () {
          return boundedFn(__dict_BooleanAlgebra_22["__superclass_Prelude.Bounded_0"]());
      }, function (fx) {
          return function (fy) {
              return function (a) {
                  return conj(__dict_BooleanAlgebra_22)(fx(a))(fy(a));
              };
          };
      }, function (fx) {
          return function (fy) {
              return function (a) {
                  return disj(__dict_BooleanAlgebra_22)(fx(a))(fy(a));
              };
          };
      }, function (fx) {
          return function (a) {
              return not(__dict_BooleanAlgebra_22)(fx(a));
          };
      });
  };
  var booleanAlgebraBoolean = new BooleanAlgebra(function () {
      return boundedBoolean;
  }, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
  var bind = function (dict) {
      return dict.bind;
  };
  var apply = function (dict) {
      return dict.apply;
  };
  var $less$times$greater = function (__dict_Apply_25) {
      return apply(__dict_Apply_25);
  };
  var liftA1 = function (__dict_Applicative_26) {
      return function (f) {
          return function (a) {
              return $less$times$greater(__dict_Applicative_26["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_26)(f))(a);
          };
      };
  };
  var append = function (dict) {
      return dict.append;
  };
  var $plus$plus = function (__dict_Semigroup_27) {
      return append(__dict_Semigroup_27);
  };
  var $less$greater = function (__dict_Semigroup_28) {
      return append(__dict_Semigroup_28);
  };
  var ap = function (__dict_Monad_30) {
      return function (f) {
          return function (a) {
              return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(f)(function (_11) {
                  return bind(__dict_Monad_30["__superclass_Prelude.Bind_1"]())(a)(function (_10) {
                      return $$return(__dict_Monad_30["__superclass_Prelude.Applicative_0"]())(_11(_10));
                  });
              });
          };
      };
  };
  var add = function (dict) {
      return dict.add;
  };
  var $plus = function (__dict_Semiring_31) {
      return add(__dict_Semiring_31);
  };
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
  exports["Show"] = Show;
  exports["BooleanAlgebra"] = BooleanAlgebra;
  exports["Bounded"] = Bounded;
  exports["Ord"] = Ord;
  exports["Eq"] = Eq;
  exports["Ring"] = Ring;
  exports["Semiring"] = Semiring;
  exports["Semigroup"] = Semigroup;
  exports["Monad"] = Monad;
  exports["Bind"] = Bind;
  exports["Applicative"] = Applicative;
  exports["Apply"] = Apply;
  exports["Functor"] = Functor;
  exports["Category"] = Category;
  exports["Semigroupoid"] = Semigroupoid;
  exports["show"] = show;
  exports["not"] = not;
  exports["disj"] = disj;
  exports["conj"] = conj;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["unsafeCompare"] = unsafeCompare;
  exports[">"] = $greater;
  exports["compare"] = compare;
  exports["=="] = $eq$eq;
  exports["eq"] = eq;
  exports["-"] = $minus;
  exports["sub"] = sub;
  exports["+"] = $plus;
  exports["one"] = one;
  exports["mul"] = mul;
  exports["zero"] = zero;
  exports["add"] = add;
  exports["++"] = $plus$plus;
  exports["<>"] = $less$greater;
  exports["append"] = append;
  exports["ap"] = ap;
  exports["return"] = $$return;
  exports["bind"] = bind;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["<*>"] = $less$times$greater;
  exports["apply"] = apply;
  exports["void"] = $$void;
  exports["<$>"] = $less$dollar$greater;
  exports["map"] = map;
  exports["id"] = id;
  exports["<<<"] = $less$less$less;
  exports["compose"] = compose;
  exports["otherwise"] = otherwise;
  exports["const"] = $$const;
  exports["flip"] = flip;
  exports["unit"] = unit;
  exports["semigroupoidFn"] = semigroupoidFn;
  exports["categoryFn"] = categoryFn;
  exports["semigroupString"] = semigroupString;
  exports["semiringInt"] = semiringInt;
  exports["eqBoolean"] = eqBoolean;
  exports["eqNumber"] = eqNumber;
  exports["ordNumber"] = ordNumber;
  exports["boundedBoolean"] = boundedBoolean;
  exports["boundedFn"] = boundedFn;
  exports["booleanAlgebraBoolean"] = booleanAlgebraBoolean;
  exports["booleanAlgebraFn"] = booleanAlgebraFn;
  exports["showInt"] = showInt;;

})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Alt = function (__superclass_Prelude$dotFunctor_0, alt) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.alt = alt;
  };
  var alt = function (dict) {
      return dict.alt;
  };
  var $less$bar$greater = function (__dict_Alt_0) {
      return alt(__dict_Alt_0);
  };
  exports["Alt"] = Alt;
  exports["<|>"] = $less$bar$greater;
  exports["alt"] = alt;;

})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Lazy = function (defer) {
      this.defer = defer;
  };
  var defer = function (dict) {
      return dict.defer;
  };
  var fix = function (__dict_Lazy_0) {
      return function (f) {
          return defer(__dict_Lazy_0)(function (_71) {
              return f(fix(__dict_Lazy_0)(f));
          });
      };
  };
  exports["Lazy"] = Lazy;
  exports["fix"] = fix;
  exports["defer"] = defer;;

})(PS["Control.Lazy"] = PS["Control.Lazy"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Plus = function (__superclass_Control$dotAlt$dotAlt_0, empty) {
      this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
      this.empty = empty;
  };
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;;

})(PS["Control.Plus"] = PS["Control.Plus"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Plus = PS["Control.Plus"];
  var Alternative = function (__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
      this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
  };
  exports["Alternative"] = Alternative;;

})(PS["Control.Alternative"] = PS["Control.Alternative"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var $times$greater = function (__dict_Apply_1) {
      return function (a) {
          return function (b) {
              return Prelude["<*>"](__dict_Apply_1)(Prelude["<$>"](__dict_Apply_1["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryFn)))(a))(b);
          };
      };
  };
  exports["*>"] = $times$greater;;

})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var when = function (__dict_Monad_0) {
      return function (_69) {
          return function (m) {
              if (_69) {
                  return m;
              };
              if (!_69) {
                  return Prelude["return"](__dict_Monad_0["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
              };
              throw new Error("Failed pattern match at Control.Monad line 8, column 1 - line 9, column 1: " + [ _69.constructor.name, m.constructor.name ]);
          };
      };
  };
  exports["when"] = when;;

})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff

  exports.returnE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };

})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];
  var monadEff = new Prelude.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Prelude.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Prelude.Apply(function () {
      return functorEff;
  }, Prelude.ap(monadEff));
  var applicativeEff = new Prelude.Applicative(function () {
      return applyEff;
  }, $foreign.returnE);
  var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["runPure"] = $foreign.runPure;;

})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Random

  exports.random = Math.random;

})(PS["Control.Monad.Eff.Random"] = PS["Control.Monad.Eff.Random"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.toNumber = function (n) {
    return n;
  };

})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.exp = Math.exp;

  exports.pi = Math.PI;

})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Math"];
  exports["pi"] = $foreign.pi;
  exports["exp"] = $foreign.exp;;

})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Maybe.Unsafe

  exports.unsafeThrow = function (msg) {
    throw new Error(msg);
  };

})(PS["Data.Maybe.Unsafe"] = PS["Data.Maybe.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Alternative = PS["Control.Alternative"];
  var MonadPlus = function (__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
      this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
      this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
  };
  var guard = function (__dict_MonadPlus_0) {
      return function (_178) {
          if (_178) {
              return Prelude["return"]((__dict_MonadPlus_0["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
          };
          if (!_178) {
              return Control_Plus.empty((__dict_MonadPlus_0["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
          };
          throw new Error("Failed pattern match at Control.MonadPlus line 35, column 1 - line 36, column 1: " + [ _178.constructor.name ]);
      };
  };
  exports["MonadPlus"] = MonadPlus;
  exports["guard"] = guard;;

})(PS["Control.MonadPlus"] = PS["Control.MonadPlus"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
      this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
      this.mempty = mempty;
  };
  var monoidString = new Monoid(function () {
      return Prelude.semigroupString;
  }, "");
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;;

})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Monoid = PS["Data.Monoid"];
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var functorMaybe = new Prelude.Functor(function (fn) {
      return function (_181) {
          if (_181 instanceof Just) {
              return new Just(fn(_181.value0));
          };
          return Nothing.value;
      };
  });
  var applyMaybe = new Prelude.Apply(function () {
      return functorMaybe;
  }, function (_182) {
      return function (x) {
          if (_182 instanceof Just) {
              return Prelude["<$>"](functorMaybe)(_182.value0)(x);
          };
          if (_182 instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 121, column 1 - line 145, column 1: " + [ _182.constructor.name, x.constructor.name ]);
      };
  });
  var bindMaybe = new Prelude.Bind(function () {
      return applyMaybe;
  }, function (_184) {
      return function (k) {
          if (_184 instanceof Just) {
              return k(_184.value0);
          };
          if (_184 instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 180, column 1 - line 199, column 1: " + [ _184.constructor.name, k.constructor.name ]);
      };
  });
  var applicativeMaybe = new Prelude.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  var monadMaybe = new Prelude.Monad(function () {
      return applicativeMaybe;
  }, function () {
      return bindMaybe;
  });
  var altMaybe = new Control_Alt.Alt(function () {
      return functorMaybe;
  }, function (_183) {
      return function (r) {
          if (_183 instanceof Nothing) {
              return r;
          };
          return _183;
      };
  });
  var plusMaybe = new Control_Plus.Plus(function () {
      return altMaybe;
  }, Nothing.value);
  var alternativeMaybe = new Control_Alternative.Alternative(function () {
      return plusMaybe;
  }, function () {
      return applicativeMaybe;
  });
  var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
      return alternativeMaybe;
  }, function () {
      return monadMaybe;
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["altMaybe"] = altMaybe;
  exports["plusMaybe"] = plusMaybe;
  exports["alternativeMaybe"] = alternativeMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["monadMaybe"] = monadMaybe;
  exports["monadPlusMaybe"] = monadPlusMaybe;;

})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Data.Maybe.Unsafe"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var fromJust = function (_242) {
      if (_242 instanceof Data_Maybe.Just) {
          return _242.value0;
      };
      if (_242 instanceof Data_Maybe.Nothing) {
          return $foreign.unsafeThrow("Data.Maybe.Unsafe.fromJust called on Nothing");
      };
      throw new Error("Failed pattern match at Data.Maybe.Unsafe line 10, column 1 - line 11, column 1: " + [ _242.constructor.name ]);
  };
  exports["fromJust"] = fromJust;;

})(PS["Data.Maybe.Unsafe"] = PS["Data.Maybe.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Data.Int"];
  var Prelude = PS["Prelude"];
  var $$Math = PS["Math"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  exports["toNumber"] = $foreign.toNumber;;

})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Random"];
  var Prelude = PS["Prelude"];
  var Data_Int = PS["Data.Int"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var randomRange = function (min) {
      return function (max) {
          return function __do() {
              var _4 = $foreign.random();
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(_4 * (max - min) + min)();
          };
      };
  };
  exports["randomRange"] = randomRange;;

})(PS["Control.Monad.Eff.Random"] = PS["Control.Monad.Eff.Random"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Ref

  exports.newRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modifyRef'"] = function (ref) {
    return function (f) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Ref"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var modifyRef = function (ref) {
      return function (f) {
          return $foreign["modifyRef'"](ref)(function (s) {
              return {
                  state: f(s),
                  value: Prelude.unit
              };
          });
      };
  };
  exports["modifyRef"] = modifyRef;
  exports["readRef"] = $foreign.readRef;
  exports["newRef"] = $foreign.newRef;;

})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Unsafe

  exports.unsafeInterleaveEff = function (f) {
    return f;
  };

})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Unsafe"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["unsafeInterleaveEff"] = $foreign.unsafeInterleaveEff;;

})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  /* global exports, window */
  "use strict";

  // module DOM.HTML

  exports.window = function () {
    return window;
  };

})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["DOM.HTML"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["window"] = $foreign.window;;

})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
  "use strict";

  // module DOM.RequestAnimationFrame

  var requestAnimationFrame = null;

  // http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/
  exports.requestAnimationFrame_ = function(window_) {
      return function(action) {

          if (!requestAnimationFrame) {
              requestAnimationFrame = (function() {
                  return window_.requestAnimationFrame ||
                      window_.webkitRequestAnimationFrame ||
                      window_.mozRequestAnimationFrame ||
                      function(callback) {
                          window_.setTimeout(callback, 1000 / 60);
                      };
              })();
          }

          return function() {
              return requestAnimationFrame(action);
          };
      }
  };

})(PS["DOM.RequestAnimationFrame"] = PS["DOM.RequestAnimationFrame"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["DOM.RequestAnimationFrame"];
  var Prelude = PS["Prelude"];
  var DOM_HTML = PS["DOM.HTML"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var requestAnimationFrame = function (action) {
      return function __do() {
          var _1 = DOM_HTML.window();
          return $foreign.requestAnimationFrame_(_1)(action)();
      };
  };
  exports["requestAnimationFrame"] = requestAnimationFrame;;

})(PS["DOM.RequestAnimationFrame"] = PS["DOM.RequestAnimationFrame"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Date

  exports.nowEpochMilliseconds = function () {
    return Date.now();
  };

})(PS["Data.Date"] = PS["Data.Date"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var semiringMilliseconds = new Prelude.Semiring(function (_75) {
      return function (_76) {
          return _75 + _76;
      };
  }, function (_77) {
      return function (_78) {
          return _77 * _78;
      };
  }, 1.0, 0.0);
  var ringMilliseconds = new Prelude.Ring(function () {
      return semiringMilliseconds;
  }, function (_79) {
      return function (_80) {
          return _79 - _80;
      };
  });
  exports["semiringMilliseconds"] = semiringMilliseconds;
  exports["ringMilliseconds"] = ringMilliseconds;;

})(PS["Data.Time"] = PS["Data.Time"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Data.Date"];
  var Prelude = PS["Prelude"];
  var Global = PS["Global"];
  var Data_Function = PS["Data.Function"];
  var Data_Enum = PS["Data.Enum"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Time = PS["Data.Time"];
  exports["nowEpochMilliseconds"] = $foreign.nowEpochMilliseconds;;

})(PS["Data.Date"] = PS["Data.Date"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foldable

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };

})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Monoid = PS["Data.Monoid"];
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (__dict_BooleanAlgebra_1) {
      return new Prelude.Semigroup(function (_125) {
          return function (_126) {
              return Prelude.disj(__dict_BooleanAlgebra_1)(_125)(_126);
          };
      });
  };
  var runDisj = function (_115) {
      return _115;
  };
  var monoidDisj = function (__dict_BooleanAlgebra_3) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(__dict_BooleanAlgebra_3);
      }, Prelude.bottom(__dict_BooleanAlgebra_3["__superclass_Prelude.Bounded_0"]()));
  };
  exports["Disj"] = Disj;
  exports["runDisj"] = runDisj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;;

})(PS["Data.Monoid.Disj"] = PS["Data.Monoid.Disj"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (__dict_Applicative_0) {
      return function (__dict_Foldable_1) {
          return function (f) {
              return foldr(__dict_Foldable_1)(Prelude["<<<"](Prelude.semigroupoidFn)(Control_Apply["*>"](__dict_Applicative_0["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_0)(Prelude.unit));
          };
      };
  };
  var for_ = function (__dict_Applicative_2) {
      return function (__dict_Foldable_3) {
          return Prelude.flip(traverse_(__dict_Applicative_2)(__dict_Foldable_3));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (__dict_Foldable_6) {
      return function (__dict_Monoid_7) {
          return function (sep) {
              return function (xs) {
                  var go = function (_241) {
                      return function (x) {
                          if (_241.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(_241.acc)(Prelude["<>"](__dict_Monoid_7["__superclass_Prelude.Semigroup_0"]())(sep)(x))
                          };
                      };
                  };
                  return (foldl(__dict_Foldable_6)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(__dict_Monoid_7)
                  })(xs)).acc;
              };
          };
      };
  };
  var foldableMaybe = new Foldable(function (__dict_Monoid_15) {
      return function (f) {
          return function (_219) {
              if (_219 instanceof Data_Maybe.Nothing) {
                  return Data_Monoid.mempty(__dict_Monoid_15);
              };
              if (_219 instanceof Data_Maybe.Just) {
                  return f(_219.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable line 51, column 1 - line 59, column 1: " + [ f.constructor.name, _219.constructor.name ]);
          };
      };
  }, function (f) {
      return function (z) {
          return function (_218) {
              if (_218 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (_218 instanceof Data_Maybe.Just) {
                  return f(z)(_218.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable line 51, column 1 - line 59, column 1: " + [ f.constructor.name, z.constructor.name, _218.constructor.name ]);
          };
      };
  }, function (f) {
      return function (z) {
          return function (_217) {
              if (_217 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (_217 instanceof Data_Maybe.Just) {
                  return f(_217.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Foldable line 51, column 1 - line 59, column 1: " + [ f.constructor.name, z.constructor.name, _217.constructor.name ]);
          };
      };
  });
  var foldableArray = new Foldable(function (__dict_Monoid_19) {
      return function (f) {
          return function (xs) {
              return foldr(foldableArray)(function (x) {
                  return function (acc) {
                      return Prelude["<>"](__dict_Monoid_19["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(__dict_Monoid_19))(xs);
          };
      };
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var fold = function (__dict_Foldable_23) {
      return function (__dict_Monoid_24) {
          return foldMap(__dict_Foldable_23)(__dict_Monoid_24)(Prelude.id(Prelude.categoryFn));
      };
  };
  var any = function (__dict_Foldable_26) {
      return function (__dict_BooleanAlgebra_27) {
          return function (p) {
              return Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Disj.runDisj)(foldMap(__dict_Foldable_26)(Data_Monoid_Disj.monoidDisj(__dict_BooleanAlgebra_27))(Prelude["<<<"](Prelude.semigroupoidFn)(Data_Monoid_Disj.Disj)(p)));
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["any"] = any;
  exports["intercalate"] = intercalate;
  exports["for_"] = for_;
  exports["traverse_"] = traverse_;
  exports["fold"] = fold;
  exports["foldMap"] = foldMap;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;;

})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
      this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  };
  var sequence = function (dict) {
      return dict.sequence;
  };
  var $$for = function (__dict_Applicative_22) {
      return function (__dict_Traversable_23) {
          return function (x) {
              return function (f) {
                  return traverse(__dict_Traversable_23)(__dict_Applicative_22)(f)(x);
              };
          };
      };
  };
  exports["Traversable"] = Traversable;
  exports["for"] = $$for;
  exports["sequence"] = sequence;
  exports["traverse"] = traverse;;

})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  exports["Left"] = Left;
  exports["Right"] = Right;;

})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Lazy

  exports.defer = function () {

    function Defer (thunk) {
      if (this instanceof Defer) {
        this.thunk = thunk;
        return this;
      } else {
        return new Defer(thunk);
      }
    }

    Defer.prototype.force = function () {
      var value = this.thunk();
      delete this.thunk;
      this.force = function () {
        return value;
      };
      return value;
    };

    return Defer;

  }();

  exports.force = function (l) {
    return l.force();
  };

})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Data.Lazy"];
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var functorLazy = new Prelude.Functor(function (f) {
      return function (l) {
          return $foreign.defer(function (_83) {
              return f($foreign.force(l));
          });
      };
  });
  exports["functorLazy"] = functorLazy;
  exports["force"] = $foreign.force;
  exports["defer"] = $foreign.defer;;

})(PS["Data.Lazy"] = PS["Data.Lazy"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  exports["Tuple"] = Tuple;;

})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Alt = PS["Control.Alt"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var $colon = Cons.create;
  var toList = function (__dict_Foldable_3) {
      return Data_Foldable.foldr(__dict_Foldable_3)(Cons.create)(Nil.value);
  };
  var singleton = function (a) {
      return new Cons(a, Nil.value);
  };
  var semigroupList = new Prelude.Semigroup(function (_103) {
      return function (ys) {
          if (_103 instanceof Nil) {
              return ys;
          };
          if (_103 instanceof Cons) {
              return new Cons(_103.value0, Prelude["<>"](semigroupList)(_103.value1)(ys));
          };
          throw new Error("Failed pattern match: " + [ _103.constructor.name, ys.constructor.name ]);
      };
  });
  var range = function (start) {
      return function (end) {
          if (start === end) {
              return singleton(start);
          };
          if (Prelude.otherwise) {
              var go = function (__copy_s) {
                  return function (__copy_e) {
                      return function (__copy_step) {
                          return function (__copy_rest) {
                              var s = __copy_s;
                              var e = __copy_e;
                              var step = __copy_step;
                              var rest = __copy_rest;
                              tco: while (true) {
                                  if (s === e) {
                                      return new Cons(s, rest);
                                  };
                                  if (Prelude.otherwise) {
                                      var __tco_s = s + step | 0;
                                      var __tco_e = e;
                                      var __tco_step = step;
                                      var __tco_rest = new Cons(s, rest);
                                      s = __tco_s;
                                      e = __tco_e;
                                      step = __tco_step;
                                      rest = __tco_rest;
                                      continue tco;
                                  };
                                  throw new Error("Failed pattern match at Data.List line 137, column 1 - line 138, column 1: " + [ s.constructor.name, e.constructor.name, step.constructor.name, rest.constructor.name ]);
                              };
                          };
                      };
                  };
              };
              return go(end)(start)((function () {
                  var _375 = start > end;
                  if (_375) {
                      return 1;
                  };
                  if (!_375) {
                      return -1;
                  };
                  throw new Error("Failed pattern match at Data.List line 137, column 1 - line 138, column 1: " + [ _375.constructor.name ]);
              })())(Nil.value);
          };
          throw new Error("Failed pattern match at Data.List line 137, column 1 - line 138, column 1: " + [ start.constructor.name, end.constructor.name ]);
      };
  };
  var $dot$dot = range;
  var $$null = function (_52) {
      if (_52 instanceof Nil) {
          return true;
      };
      return false;
  };
  var monoidList = new Data_Monoid.Monoid(function () {
      return semigroupList;
  }, Nil.value);
  var functorList = new Prelude.Functor(function (f) {
      return function (_104) {
          if (_104 instanceof Nil) {
              return Nil.value;
          };
          if (_104 instanceof Cons) {
              return new Cons(f(_104.value0), Prelude["<$>"](functorList)(f)(_104.value1));
          };
          throw new Error("Failed pattern match: " + [ f.constructor.name, _104.constructor.name ]);
      };
  });
  var foldableList = new Data_Foldable.Foldable(function (__dict_Monoid_16) {
      return function (f) {
          return function (_107) {
              if (_107 instanceof Nil) {
                  return Data_Monoid.mempty(__dict_Monoid_16);
              };
              if (_107 instanceof Cons) {
                  return Prelude["<>"](__dict_Monoid_16["__superclass_Prelude.Semigroup_0"]())(f(_107.value0))(Data_Foldable.foldMap(foldableList)(__dict_Monoid_16)(f)(_107.value1));
              };
              throw new Error("Failed pattern match: " + [ f.constructor.name, _107.constructor.name ]);
          };
      };
  }, function (o) {
      return function (b) {
          return function (_106) {
              if (_106 instanceof Nil) {
                  return b;
              };
              if (_106 instanceof Cons) {
                  return Data_Foldable.foldl(foldableList)(o)(o(b)(_106.value0))(_106.value1);
              };
              throw new Error("Failed pattern match: " + [ o.constructor.name, b.constructor.name, _106.constructor.name ]);
          };
      };
  }, function (o) {
      return function (b) {
          return function (_105) {
              if (_105 instanceof Nil) {
                  return b;
              };
              if (_105 instanceof Cons) {
                  return o(_105.value0)(Data_Foldable.foldr(foldableList)(o)(b)(_105.value1));
              };
              throw new Error("Failed pattern match: " + [ o.constructor.name, b.constructor.name, _105.constructor.name ]);
          };
      };
  });
  var traversableList = new Data_Traversable.Traversable(function () {
      return foldableList;
  }, function () {
      return functorList;
  }, function (__dict_Applicative_2) {
      return function (_110) {
          if (_110 instanceof Nil) {
              return Prelude.pure(__dict_Applicative_2)(Nil.value);
          };
          if (_110 instanceof Cons) {
              return Prelude["<*>"](__dict_Applicative_2["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_2["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(_110.value0))(Data_Traversable.sequence(traversableList)(__dict_Applicative_2)(_110.value1));
          };
          throw new Error("Failed pattern match: " + [ _110.constructor.name ]);
      };
  }, function (__dict_Applicative_1) {
      return function (f) {
          return function (_109) {
              if (_109 instanceof Nil) {
                  return Prelude.pure(__dict_Applicative_1)(Nil.value);
              };
              if (_109 instanceof Cons) {
                  return Prelude["<*>"](__dict_Applicative_1["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_1["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Cons.create)(f(_109.value0)))(Data_Traversable.traverse(traversableList)(__dict_Applicative_1)(f)(_109.value1));
              };
              throw new Error("Failed pattern match: " + [ f.constructor.name, _109.constructor.name ]);
          };
      };
  });
  var applyList = new Prelude.Apply(function () {
      return functorList;
  }, function (_111) {
      return function (xs) {
          if (_111 instanceof Nil) {
              return Nil.value;
          };
          if (_111 instanceof Cons) {
              return Prelude["<>"](semigroupList)(Prelude["<$>"](functorList)(_111.value0)(xs))(Prelude["<*>"](applyList)(_111.value1)(xs));
          };
          throw new Error("Failed pattern match: " + [ _111.constructor.name, xs.constructor.name ]);
      };
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports[":"] = $colon;
  exports["null"] = $$null;
  exports["range"] = range;
  exports[".."] = $dot$dot;
  exports["singleton"] = singleton;
  exports["toList"] = toList;
  exports["semigroupList"] = semigroupList;
  exports["monoidList"] = monoidList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["traversableList"] = traversableList;
  exports["applyList"] = applyList;;

})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Data_Unfoldable = PS["Data.Unfoldable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Lazy = PS["Data.Lazy"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Tuple = PS["Data.Tuple"];
  var List = function (x) {
      return x;
  };
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var runList = function (_119) {
      return _119;
  };
  var step = Prelude["<<<"](Prelude.semigroupoidFn)(Data_Lazy.force)(runList);
  var uncons = function (xs) {
      var _555 = step(xs);
      if (_555 instanceof Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (_555 instanceof Cons) {
          return new Data_Maybe.Just({
              head: _555.value0,
              tail: _555.value1
          });
      };
      throw new Error("Failed pattern match at Data.List.Lazy line 278, column 1 - line 279, column 1: " + [ _555.constructor.name ]);
  };
  var tail = function (xs) {
      return Prelude["<$>"](Data_Maybe.functorMaybe)(function (_1) {
          return _1.tail;
      })(uncons(xs));
  };
  var lazyList = new Control_Lazy.Lazy(function (f) {
      return List(Data_Lazy.defer(Prelude["<<<"](Prelude.semigroupoidFn)(step)(f)));
  });
  var head = function (xs) {
      return Prelude["<$>"](Data_Maybe.functorMaybe)(function (_0) {
          return _0.head;
      })(uncons(xs));
  };
  var functorList = new Prelude.Functor(function (f) {
      return function (xs) {
          var go = function (_155) {
              if (_155 instanceof Nil) {
                  return Nil.value;
              };
              if (_155 instanceof Cons) {
                  return new Cons(f(_155.value0), Prelude["<$>"](functorList)(f)(_155.value1));
              };
              throw new Error("Failed pattern match at Data.List.Lazy line 671, column 5 - line 672, column 5: " + [ _155.constructor.name ]);
          };
          return Prelude["<$>"](Data_Lazy.functorLazy)(go)(runList(xs));
      };
  });
  var cons = function (x) {
      return function (xs) {
          return List(Data_Lazy.defer(function (_117) {
              return new Cons(x, xs);
          }));
      };
  };
  var iterate = function (f) {
      return function (x) {
          return Control_Lazy.fix(lazyList)(function (xs) {
              return cons(x)(Prelude["<$>"](functorList)(f)(xs));
          });
      };
  };
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["List"] = List;
  exports["uncons"] = uncons;
  exports["tail"] = tail;
  exports["head"] = head;
  exports["cons"] = cons;
  exports["iterate"] = iterate;
  exports["step"] = step;
  exports["runList"] = runList;
  exports["lazyList"] = lazyList;
  exports["functorList"] = functorList;;

})(PS["Data.List.Lazy"] = PS["Data.List.Lazy"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.getCanvasElementByIdImpl = function(id, Just, Nothing) {
      return function() {
          var el = document.getElementById(id);
          if (el && el instanceof HTMLCanvasElement) {
              return Just(el);
          } else {
              return Nothing;
          }
      };
  };

  exports.getContext2D = function(c) {
      return function() {
          return c.getContext('2d');
      };
  };

  exports.setLineWidth = function(width) {
      return function(ctx) {
          return function() {
              ctx.lineWidth = width;
              return ctx;
          };
      };
  };

  exports.setFillStyle = function(style) {
      return function(ctx) {
          return function() {
              ctx.fillStyle = style;
              return ctx;
          };
      };
  };

  exports.setStrokeStyle = function(style) {
      return function(ctx) {
          return function() {
              ctx.strokeStyle = style;
              return ctx;
          };
      };
  };

  exports.setShadowColor = function(color) {
      return function(ctx) {
          return function() {
              ctx.shadowColor = color;
              return ctx;
          };
      };
  };

  exports.setShadowBlur = function(blur) {
      return function(ctx) {
          return function() {
              ctx.shadowBlur = blur;
              return ctx;
          };
      };
  };

  exports.setShadowOffsetX = function(offsetX) {
      return function(ctx) {
          return function() {
              ctx.shadowOffsetX = offsetX;
              return ctx;
          };
      };
  };

  exports.setShadowOffsetY = function(offsetY) {
      return function(ctx) {
          return function() {
              ctx.shadowOffsetY = offsetY;
              return ctx;
          };
      };
  };

  exports.beginPath = function(ctx) {
      return function() {
          ctx.beginPath();
          return ctx;
      };
  };

  exports.stroke = function(ctx) {
      return function() {
          ctx.stroke();
          return ctx;
      };
  };

  exports.fill = function(ctx) {
      return function() {
          ctx.fill();
          return ctx;
      };
  };

  exports.clip = function(ctx) {
      return function() {
          ctx.clip();
          return ctx;
      };
  };

  exports.lineTo = function(ctx) {
      return function(x) {
          return function(y) {
              return function() {
                  ctx.lineTo(x, y);
                  return ctx;
              };
          };
      };
  };

  exports.moveTo = function(ctx) {
      return function(x) {
          return function(y) {
              return function() {
                  ctx.moveTo(x, y);
                  return ctx;
              };
          };
      };
  };

  exports.closePath = function(ctx) {
      return function() {
          ctx.closePath();
          return ctx;
      };
  };

  exports.arc = function(ctx) {
      return function(a) {
          return function() {
              ctx.arc(a.x, a.y, a.r, a.start, a.end);
              return ctx;
          };
      };
  };

  exports.rect = function(ctx) {
      return function(r) {
          return function() {
              ctx.rect(r.x, r.y, r.w, r.h);
              return ctx;
          };
      };
  };

  exports.fillRect = function(ctx) {
      return function(r) {
          return function() {
              ctx.fillRect(r.x, r.y, r.w, r.h);
              return ctx;
          };
      };
  };

  exports.scale = function(t) {
      return function(ctx) {
          return function() {
              ctx.scale(t.scaleX, t.scaleY);
              return ctx;
          };
      };
  };

  exports.rotate = function(angle) {
      return function(ctx) {
          return function() {
              ctx.rotate(angle);
              return ctx;
          };
      };
  };

  exports.translate = function(t) {
      return function(ctx) {
          return function() {
              ctx.translate(t.translateX, t.translateY);
              return ctx;
          };
      };
  };

  exports.font = function(ctx) {
      return function() {
          return ctx.font;
      };
  };

  exports.setFont = function(fontspec) {
      return function(ctx) {
          return function() {
              ctx.font = fontspec;
              return ctx;
          };
      };
  };

  exports.fillText = function(ctx) {
      return function(text) {
          return function(x) {
              return function(y) {
                  return function() {
                      ctx.fillText(text, x, y);
                      return ctx;
                  };
              };
          };
      };
  };

  exports.measureText = function(ctx) {
      return function(text) {
          return function() {
              return ctx.measureText(text);
          };
      };
  };

  exports.save = function(ctx) {
      return function() {
          ctx.save();
          return ctx;
      };
  };

  exports.restore = function(ctx) {
      return function() {
          ctx.restore();
          return ctx;
      };
  };

})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Graphics.Canvas"];
  var Data_Function = PS["Data.Function"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var withContext = function (ctx) {
      return function (action) {
          return function __do() {
              $foreign.save(ctx)();
              var _25 = action();
              $foreign.restore(ctx)();
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(_25)();
          };
      };
  };
  var strokePath = function (ctx) {
      return function (path) {
          return function __do() {
              $foreign.beginPath(ctx)();
              var _23 = path();
              $foreign.stroke(ctx)();
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(_23)();
          };
      };
  };
  var getCanvasElementById = function (elId) {
      return $foreign.getCanvasElementByIdImpl(elId, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
  };
  var fillPath = function (ctx) {
      return function (path) {
          return function __do() {
              $foreign.beginPath(ctx)();
              var _24 = path();
              $foreign.fill(ctx)();
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(_24)();
          };
      };
  };
  exports["withContext"] = withContext;
  exports["fillPath"] = fillPath;
  exports["strokePath"] = strokePath;
  exports["getCanvasElementById"] = getCanvasElementById;
  exports["measureText"] = $foreign.measureText;
  exports["fillText"] = $foreign.fillText;
  exports["setFont"] = $foreign.setFont;
  exports["translate"] = $foreign.translate;
  exports["rotate"] = $foreign.rotate;
  exports["scale"] = $foreign.scale;
  exports["fillRect"] = $foreign.fillRect;
  exports["rect"] = $foreign.rect;
  exports["arc"] = $foreign.arc;
  exports["closePath"] = $foreign.closePath;
  exports["moveTo"] = $foreign.moveTo;
  exports["lineTo"] = $foreign.lineTo;
  exports["clip"] = $foreign.clip;
  exports["setShadowColor"] = $foreign.setShadowColor;
  exports["setShadowOffsetY"] = $foreign.setShadowOffsetY;
  exports["setShadowOffsetX"] = $foreign.setShadowOffsetX;
  exports["setShadowBlur"] = $foreign.setShadowBlur;
  exports["setStrokeStyle"] = $foreign.setStrokeStyle;
  exports["setFillStyle"] = $foreign.setFillStyle;
  exports["setLineWidth"] = $foreign.setLineWidth;
  exports["getContext2D"] = $foreign.getContext2D;;

})(PS["Graphics.Canvas"] = PS["Graphics.Canvas"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_Alt = PS["Control.Alt"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var FontFamily = function (x) {
      return x;
  };
  var Font = (function () {
      function Font(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Font.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Font(value0, value1, value2);
              };
          };
      };
      return Font;
  })();
  var semigroupFontOptions = new Prelude.Semigroup(function (_30) {
      return function (_31) {
          return {
              style: Control_Alt["<|>"](Data_Maybe.altMaybe)(_30.style)(_31.style),
              variant: Control_Alt["<|>"](Data_Maybe.altMaybe)(_30.variant)(_31.variant),
              weight: Control_Alt["<|>"](Data_Maybe.altMaybe)(_30.weight)(_31.weight)
          };
      };
  });
  var optionsString = function (_29) {
      return Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")([ Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidString)(_29.style), Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidString)(_29.variant), Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidString)(_29.weight) ]);
  };
  var monoidFontOptions = new Data_Monoid.Monoid(function () {
      return semigroupFontOptions;
  }, {
      style: Data_Maybe.Nothing.value,
      variant: Data_Maybe.Nothing.value,
      weight: Data_Maybe.Nothing.value
  });
  var fontString = function (_28) {
      return optionsString(_28.value2) + (" " + (Prelude.show(Prelude.showInt)(_28.value1) + ("px " + _28.value0)));
  };
  var font = Font.create;
  var customFont = FontFamily;
  exports["customFont"] = customFont;
  exports["fontString"] = fontString;
  exports["font"] = font;
  exports["semigroupFontOptions"] = semigroupFontOptions;
  exports["monoidFontOptions"] = monoidFontOptions;;

})(PS["Graphics.Drawing.Font"] = PS["Graphics.Drawing.Font"] || {});
(function(exports) {
  "use strict";

  // module Graphics.Drawing.Color

  exports.byteToHex = function(n) {

      var s = (n = Math.min(255, Math.max(n, 0)) | 0).toString(16);
      return n >= 16 ? s : "0" + s;
  };
})(PS["Graphics.Drawing.Color"] = PS["Graphics.Drawing.Color"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Graphics.Drawing.Color"];
  var Prelude = PS["Prelude"];
  var $$Math = PS["Math"];
  var Color = (function () {
      function Color(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Color.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Color(value0, value1, value2);
              };
          };
      };
      return Color;
  })();
  var rgb = Color.create;
  var white = rgb(255.0)(255.0)(255.0);
  var lighten = function (l) {
      return function (_13) {
          var interp = function (c) {
              return 255.0 * l + c * (1.0 - l);
          };
          return new Color(interp(_13.value0), interp(_13.value1), interp(_13.value2));
      };
  };
  var green = rgb(0.0)(128.0)(0.0);
  var colorString = function (_15) {
      return "#" + ($foreign.byteToHex(_15.value0) + ($foreign.byteToHex(_15.value1) + $foreign.byteToHex(_15.value2)));
  };
  var black = rgb(0.0)(0.0)(0.0);
  exports["green"] = green;
  exports["black"] = black;
  exports["white"] = white;
  exports["lighten"] = lighten;
  exports["rgb"] = rgb;
  exports["colorString"] = colorString;;

})(PS["Graphics.Drawing.Color"] = PS["Graphics.Drawing.Color"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_List = PS["Data.List"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Alt = PS["Control.Alt"];
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var Data_Foldable = PS["Data.Foldable"];
  var Graphics_Drawing_Font = PS["Graphics.Drawing.Font"];
  var Graphics_Drawing_Color = PS["Graphics.Drawing.Color"];
  var Control_Monad = PS["Control.Monad"];
  var $$Math = PS["Math"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Path = (function () {
      function Path(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Path.create = function (value0) {
          return function (value1) {
              return new Path(value0, value1);
          };
      };
      return Path;
  })();
  var Rectangle = (function () {
      function Rectangle(value0) {
          this.value0 = value0;
      };
      Rectangle.create = function (value0) {
          return new Rectangle(value0);
      };
      return Rectangle;
  })();
  var Circle = (function () {
      function Circle(value0) {
          this.value0 = value0;
      };
      Circle.create = function (value0) {
          return new Circle(value0);
      };
      return Circle;
  })();
  var Composite = (function () {
      function Composite(value0) {
          this.value0 = value0;
      };
      Composite.create = function (value0) {
          return new Composite(value0);
      };
      return Composite;
  })();
  var Fill = (function () {
      function Fill(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Fill.create = function (value0) {
          return function (value1) {
              return new Fill(value0, value1);
          };
      };
      return Fill;
  })();
  var Outline = (function () {
      function Outline(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Outline.create = function (value0) {
          return function (value1) {
              return new Outline(value0, value1);
          };
      };
      return Outline;
  })();
  var Text = (function () {
      function Text(value0, value1, value2, value3, value4) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
      };
      Text.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return new Text(value0, value1, value2, value3, value4);
                      };
                  };
              };
          };
      };
      return Text;
  })();
  var Many = (function () {
      function Many(value0) {
          this.value0 = value0;
      };
      Many.create = function (value0) {
          return new Many(value0);
      };
      return Many;
  })();
  var Scale = (function () {
      function Scale(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Scale.create = function (value0) {
          return function (value1) {
              return new Scale(value0, value1);
          };
      };
      return Scale;
  })();
  var Translate = (function () {
      function Translate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Translate.create = function (value0) {
          return function (value1) {
              return new Translate(value0, value1);
          };
      };
      return Translate;
  })();
  var Rotate = (function () {
      function Rotate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Rotate.create = function (value0) {
          return function (value1) {
              return new Rotate(value0, value1);
          };
      };
      return Rotate;
  })();
  var Clipped = (function () {
      function Clipped(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Clipped.create = function (value0) {
          return function (value1) {
              return new Clipped(value0, value1);
          };
      };
      return Clipped;
  })();
  var WithShadow = (function () {
      function WithShadow(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      WithShadow.create = function (value0) {
          return function (value1) {
              return new WithShadow(value0, value1);
          };
      };
      return WithShadow;
  })();
  var translate = function (tx) {
      return function (ty) {
          return Translate.create({
              translateX: tx,
              translateY: ty
          });
      };
  };
  var text = Text.create;
  var shadowColor = function (c) {
      return {
          color: new Data_Maybe.Just(c),
          blur: Data_Maybe.Nothing.value,
          offset: Data_Maybe.Nothing.value
      };
  };
  var shadowBlur = function (b) {
      return {
          color: Data_Maybe.Nothing.value,
          blur: new Data_Maybe.Just(b),
          offset: Data_Maybe.Nothing.value
      };
  };
  var shadow = WithShadow.create;
  var semigroupShape = new Prelude.Semigroup(function (_32) {
      return function (_33) {
          if (_32 instanceof Composite) {
              return new Composite(Prelude["++"](Data_List.semigroupList)(_32.value0)(Data_List.singleton(_33)));
          };
          if (_33 instanceof Composite) {
              return new Composite(Data_List[":"](_32)(_33.value0));
          };
          return new Composite(new Data_List.Cons(_32, new Data_List.Cons(_33, Data_List.Nil.value)));
      };
  });
  var semigroupShadow = new Prelude.Semigroup(function (_38) {
      return function (_39) {
          return {
              color: Control_Alt["<|>"](Data_Maybe.altMaybe)(_38.color)(_39.color),
              blur: Control_Alt["<|>"](Data_Maybe.altMaybe)(_38.blur)(_39.blur),
              offset: Control_Alt["<|>"](Data_Maybe.altMaybe)(_38.offset)(_39.offset)
          };
      };
  });
  var semigroupDrawing = new Prelude.Semigroup(function (_40) {
      return function (_41) {
          if (_40 instanceof Many) {
              return new Many(Prelude["++"](Data_List.semigroupList)(_40.value0)(Data_List.singleton(_41)));
          };
          if (_41 instanceof Many) {
              return new Many(Data_List[":"](_40)(_41.value0));
          };
          return new Many(new Data_List.Cons(_40, new Data_List.Cons(_41, Data_List.Nil.value)));
      };
  });
  var scale = function (sx) {
      return function (sy) {
          return Scale.create({
              scaleX: sx,
              scaleY: sy
          });
      };
  };
  var rotate = Rotate.create;
  var render = function (ctx) {
      var renderShape = function (_47) {
          if (_47 instanceof Path && _47.value1 instanceof Data_List.Nil) {
              return Prelude["return"](Control_Monad_Eff.applicativeEff)(Prelude.unit);
          };
          if (_47 instanceof Path && _47.value1 instanceof Data_List.Cons) {
              return function __do() {
                  Graphics_Canvas.moveTo(ctx)(_47.value1.value0.x)(_47.value1.value0.y)();
                  Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_List.foldableList)(_47.value1.value1)(function (p_1) {
                      return Graphics_Canvas.lineTo(ctx)(p_1.x)(p_1.y);
                  })();
                  return Control_Monad.when(Control_Monad_Eff.monadEff)(_47.value0)(Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.closePath(ctx)))();
              };
          };
          if (_47 instanceof Rectangle) {
              return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.rect(ctx)(_47.value0));
          };
          if (_47 instanceof Circle) {
              return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.arc(ctx)({
                  x: _47.value0.x,
                  y: _47.value0.y,
                  r: _47.value0.r,
                  start: 0.0,
                  end: $$Math.pi * 2.0
              }));
          };
          if (_47 instanceof Composite) {
              return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_List.foldableList)(_47.value0)(renderShape);
          };
          throw new Error("Failed pattern match at Graphics.Drawing line 206, column 1 - line 207, column 1: " + [ _47.constructor.name ]);
      };
      var applyShadow = function (_44) {
          return function __do() {
              Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(_44.color)(function (color) {
                  return Graphics_Canvas.setShadowColor(Graphics_Drawing_Color.colorString(color))(ctx);
              })();
              Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(_44.blur)(function (blur) {
                  return Graphics_Canvas.setShadowBlur(blur)(ctx);
              })();
              return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(_44.offset)(function (offset) {
                  return function __do() {
                      Graphics_Canvas.setShadowOffsetX(offset.x)(ctx)();
                      return Graphics_Canvas.setShadowOffsetY(offset.y)(ctx)();
                  };
              })();
          };
      };
      var applyOutlineStyle = function (_46) {
          return function __do() {
              Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(_46.color)(function (color) {
                  return Graphics_Canvas.setStrokeStyle(Graphics_Drawing_Color.colorString(color))(ctx);
              })();
              return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(_46.lineWidth)(function (width) {
                  return Graphics_Canvas.setLineWidth(width)(ctx);
              })();
          };
      };
      var applyFillStyle = function (_45) {
          return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableMaybe)(_45.color)(function (color) {
              return Graphics_Canvas.setFillStyle(Graphics_Drawing_Color.colorString(color))(ctx);
          });
      };
      var go = function (_43) {
          if (_43 instanceof Fill) {
              return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.withContext(ctx)(function __do() {
                  applyFillStyle(_43.value1)();
                  return Graphics_Canvas.fillPath(ctx)(renderShape(_43.value0))();
              }));
          };
          if (_43 instanceof Outline) {
              return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.withContext(ctx)(function __do() {
                  applyOutlineStyle(_43.value1)();
                  return Graphics_Canvas.strokePath(ctx)(renderShape(_43.value0))();
              }));
          };
          if (_43 instanceof Many) {
              return Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_List.foldableList)(_43.value0)(go);
          };
          if (_43 instanceof Scale) {
              return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.withContext(ctx)(function __do() {
                  Graphics_Canvas.scale(_43.value0)(ctx)();
                  return go(_43.value1)();
              }));
          };
          if (_43 instanceof Translate) {
              return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.withContext(ctx)(function __do() {
                  Graphics_Canvas.translate(_43.value0)(ctx)();
                  return go(_43.value1)();
              }));
          };
          if (_43 instanceof Rotate) {
              return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.withContext(ctx)(function __do() {
                  Graphics_Canvas.rotate(_43.value0)(ctx)();
                  return go(_43.value1)();
              }));
          };
          if (_43 instanceof Clipped) {
              return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.withContext(ctx)(function __do() {
                  renderShape(_43.value0)();
                  Graphics_Canvas.clip(ctx)();
                  return go(_43.value1)();
              }));
          };
          if (_43 instanceof WithShadow) {
              return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.withContext(ctx)(function __do() {
                  applyShadow(_43.value0)();
                  return go(_43.value1)();
              }));
          };
          if (_43 instanceof Text) {
              return Prelude["void"](Control_Monad_Eff.functorEff)(Graphics_Canvas.withContext(ctx)(function __do() {
                  Graphics_Canvas.setFont(Graphics_Drawing_Font.fontString(_43.value0))(ctx)();
                  applyFillStyle(_43.value3)();
                  return Graphics_Canvas.fillText(ctx)(_43.value4)(_43.value1)(_43.value2)();
              }));
          };
          throw new Error("Failed pattern match at Graphics.Drawing line 206, column 1 - line 207, column 1: " + [ _43.constructor.name ]);
      };
      return go;
  };
  var rectangle = function (x) {
      return function (y) {
          return function (w) {
              return function (h) {
                  return new Rectangle({
                      x: x,
                      y: y,
                      w: w,
                      h: h
                  });
              };
          };
      };
  };
  var path = function (__dict_Foldable_0) {
      return Prelude["<<<"](Prelude.semigroupoidFn)(Path.create(false))(Data_List.toList(__dict_Foldable_0));
  };
  var outlined = Prelude.flip(Outline.create);
  var outlineColor = function (c) {
      return {
          color: new Data_Maybe.Just(c),
          lineWidth: Data_Maybe.Nothing.value
      };
  };
  var monoidDrawing = new Data_Monoid.Monoid(function () {
      return semigroupDrawing;
  }, new Many(Data_Monoid.mempty(Data_List.monoidList)));
  var lineWidth = function (c) {
      return {
          color: Data_Maybe.Nothing.value,
          lineWidth: new Data_Maybe.Just(c)
      };
  };
  var filled = Prelude.flip(Fill.create);
  var fillColor = function (c) {
      return {
          color: new Data_Maybe.Just(c)
      };
  };
  var circle = function (x) {
      return function (y) {
          return function (r) {
              return new Circle({
                  x: x,
                  y: y,
                  r: r
              });
          };
      };
  };
  exports["render"] = render;
  exports["text"] = text;
  exports["rotate"] = rotate;
  exports["translate"] = translate;
  exports["scale"] = scale;
  exports["outlined"] = outlined;
  exports["filled"] = filled;
  exports["shadow"] = shadow;
  exports["shadowColor"] = shadowColor;
  exports["shadowBlur"] = shadowBlur;
  exports["lineWidth"] = lineWidth;
  exports["outlineColor"] = outlineColor;
  exports["fillColor"] = fillColor;
  exports["circle"] = circle;
  exports["rectangle"] = rectangle;
  exports["path"] = path;
  exports["semigroupShape"] = semigroupShape;
  exports["semigroupShadow"] = semigroupShadow;
  exports["semigroupDrawing"] = semigroupDrawing;
  exports["monoidDrawing"] = monoidDrawing;;

})(PS["Graphics.Drawing"] = PS["Graphics.Drawing"] || {});
(function(exports) {
  "use strict";

  // module Main

  exports.onSpaceBar = function(f) {

      return function() {

          window.addEventListener("keydown", function(e) {
              if (e.keyCode === 32) {
                  f(true)();
              }
          }, false);
          window.addEventListener("keyup", function(e) {
              if (e.keyCode === 32) {
                  f(false)();
              }
          }, false);
      };
  };

  exports.onSpaceBarOnce = function(f) {

      return function() {

          var handler = function(e) {
              if (e.keyCode === 32) {
                  f();
              }
              window.removeEventListener("keypress", handler);
          };

          setTimeout(function() {
              window.addEventListener("keypress", handler);
          }, 500);
      };
  };

})(PS["Main"] = PS["Main"] || {});
(function(exports) {
  // Generated by psc version 0.7.3.0
  "use strict";
  var $foreign = PS["Main"];
  var Prelude = PS["Prelude"];
  var $$Math = PS["Math"];
  var Data_Int = PS["Data.Int"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_List = PS["Data.List"];
  var Control_Monad_Eff_Random = PS["Control.Monad.Eff.Random"];
  var Data_List_Lazy = PS["Data.List.Lazy"];
  var Graphics_Canvas = PS["Graphics.Canvas"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var Data_Foldable = PS["Data.Foldable"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Graphics_Drawing_Color = PS["Graphics.Drawing.Color"];
  var Graphics_Drawing_Font = PS["Graphics.Drawing.Font"];
  var Data_Monoid = PS["Data.Monoid"];
  var Graphics_Drawing = PS["Graphics.Drawing"];
  var Data_Date = PS["Data.Date"];
  var DOM_RequestAnimationFrame = PS["DOM.RequestAnimationFrame"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Either = PS["Data.Either"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Time = PS["Data.Time"];
  var DOM = PS["DOM"];
  var Up = (function () {
      function Up() {

      };
      Up.value = new Up();
      return Up;
  })();
  var Down = (function () {
      function Down() {

      };
      Down.value = new Down();
      return Down;
  })();
  var Playing = (function () {
      function Playing(value0) {
          this.value0 = value0;
      };
      Playing.create = function (value0) {
          return new Playing(value0);
      };
      return Playing;
  })();
  var Waiting = (function () {
      function Waiting(value0) {
          this.value0 = value0;
      };
      Waiting.create = function (value0) {
          return new Waiting(value0);
      };
      return Waiting;
  })();
  var subtract = function (p1) {
      return function (p2) {
          return {
              x: p1.x - p2.x,
              y: p1.y - p2.y
          };
      };
  };
  var len2 = function (p) {
      return p.x * p.x + p.y * p.y;
  };
  var eqDirection = new Prelude.Eq(function (_14) {
      return function (_15) {
          if (_14 instanceof Up && _15 instanceof Up) {
              return true;
          };
          if (_14 instanceof Down && _15 instanceof Down) {
              return true;
          };
          return false;
      };
  });
  var dist2 = function (p1) {
      return function (p2) {
          return len2(subtract(p2)(p1));
      };
  };
  var decay = function (at0) {
      return function (at7) {
          return function (n) {
              return (1.0 - $$Math.exp(-Data_Int.toNumber(n) / 2.5)) * (at7 - at0) + at0;
          };
      };
  };
  var unsafeLevel = function (level) {
      var unsafePure = Prelude["<<<"](Prelude.semigroupoidFn)(Control_Monad_Eff.runPure)(Control_Monad_Eff_Unsafe.unsafeInterleaveEff);
      return unsafePure((function () {
          var speed = decay(9.0e-2)(0.12)(level);
          var r = decay(3.0)(15.0)(level);
          var door = decay(100.0)(20.0)(level);
          var d = decay(15.0)(25.0)(level);
          console.log(speed, r, door, d)
          return function __do() {
              var _5 = Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_List.traversableList)(Prelude["<*>"](Data_List.applyList)(Prelude["<$>"](Data_List.functorList)(Data_Tuple.Tuple.create)(Data_List[".."](0)(8)))(Data_List[".."](0)(4)))(function (_13) {
                  return function __do() {
                      var _2 = Control_Monad_Eff_Random.randomRange(-d)(d)();
                      var _1 = Control_Monad_Eff_Random.randomRange(-d)(d)();
                      return Prelude["return"](Control_Monad_Eff.applicativeEff)({
                          x: 100.0 + Data_Int.toNumber(_13.value0) * 75.0 + _2,
                          y: 100.0 + Data_Int.toNumber(_13.value1) * 70.0 + _1,
                          r: r
                      })();
                  };
              })();
              var _4 = Control_Monad_Eff_Random.randomRange(50.0 + door / 2.0)(450.0 - door / 2.0)();
              var _3 = Control_Monad_Eff_Random.randomRange(50.0 + door / 2.0)(450.0 - door / 2.0)();
              return Prelude["return"](Control_Monad_Eff.applicativeEff)({
                  level: level + 1 | 0,
                  stars: _5,
                  door: door,
                  speed: speed,
                  entry: _4,
                  exit: _3
              })();
          };
      })());
  };
  var levels = Prelude["<$>"](Data_List_Lazy.functorList)(unsafeLevel)(Data_List_Lazy.iterate(Prelude["+"](Prelude.semiringInt)(1))(0));
  var clamp = function (__dict_Ord_0) {
      return function (a) {
          return function (max) {
              if (Prelude[">"](__dict_Ord_0)(a)(max)) {
                  return max;
              };
              if (Prelude.otherwise) {
                  return a;
              };
              throw new Error("Failed pattern match at Main line 88, column 1 - line 89, column 1: " + [ a.constructor.name, max.constructor.name ]);
          };
      };
  };
  var main = function __do() {
      var _12 = Graphics_Canvas.getCanvasElementById("canvas")();
      if (_12 instanceof Data_Maybe.Just) {
          var _11 = Graphics_Canvas.getContext2D(_12.value0)();
          var _10 = Control_Monad_Eff_Ref.newRef({
              space: false
          })();
          $foreign.onSpaceBar(function (b) {
              return Control_Monad_Eff_Ref.modifyRef(_10)(function (_0) {
                  var _35 = {};
                  for (var _36 in _0) {
                      if (_0.hasOwnProperty(_36)) {
                          _35[_36] = _0[_36];
                      };
                  };
                  _35.space = b;
                  return _35;
              });
          })();
          Graphics_Canvas.setFont("20px VT323")(_11)();
          var _9 = Graphics_Canvas.measureText(_11)("Press Space to Start")();
          return (function () {
              var vt323 = Graphics_Drawing_Font.font(Graphics_Drawing_Font.customFont("VT323"))(20)(Data_Monoid.mempty(Graphics_Drawing_Font.monoidFontOptions));
              var testCollision = function (level) {
                  return function (_17) {
                      if (_17 instanceof Data_List.Cons && _17.value1 instanceof Data_List.Cons) {
                          if (_17.value0.y <= 50.0) {
                              return true;
                          };
                          if (_17.value0.y >= 450.0) {
                              return true;
                          };
                          if (_17.value0.x > 750.0 && (_17.value0.y < level.exit - level.door / 2.0 || _17.value0.y > level.exit + level.door / 2.0)) {
                              return true;
                          };
                          if (Data_Foldable.any(Data_List.foldableList)(Prelude.booleanAlgebraBoolean)(function (star) {
                              return dist2(_17.value0)(star) < star.r * star.r;
                          })(level.stars)) {
                              return true;
                          };
                          if (Prelude.otherwise) {
                              return false;
                          };
                      };
                      throw new Error("Failed pattern match at Main line 115, column 1 - line 241, column 8: " + [ level.constructor.name, _17.constructor.name ]);
                  };
              };
              var playing = function (path) {
                  return function (levels_1) {
                      return function (inputs) {
                          return new Playing({
                              path: path,
                              level: levels_1,
                              direction: (function () {
                                  if (inputs.space) {
                                      return Up.value;
                                  };
                                  if (!inputs.space) {
                                      return Down.value;
                                  };
                                  throw new Error("Failed pattern match at Main line 115, column 1 - line 241, column 8: " + [ inputs.space.constructor.name ]);
                              })()
                          });
                      };
                  };
              };
              var newGame = function (levels_1) {
                  var p = {
                      x: 50.0,
                      y: (Data_Maybe_Unsafe.fromJust(Data_List_Lazy.head(levels_1))).entry
                  };
                  return new Playing({
                      path: Data_List.toList(Data_Foldable.foldableArray)([ p, p ]),
                      direction: Down.value,
                      level: levels_1
                  });
              };
              var move = function (level) {
                  return function (pt) {
                      return function (space) {
                          return function (_18) {
                              var dy = (function () {
                                  if (space) {
                                      return 1.0;
                                  };
                                  if (!space) {
                                      return -1.0;
                                  };
                                  throw new Error("Failed pattern match at Main line 168, column 13 - line 171, column 9: " + [ space.constructor.name ]);
                              })();
                              var dt = clamp(Prelude.ordNumber)(_18)(50.0);
                              var $$new = {
                                  x: pt.x + level.speed * dt,
                                  y: pt.y + dy * level.speed * dt
                              };
                              return Prelude.bind(Data_Maybe.bindMaybe)(Control_MonadPlus.guard(Data_Maybe.monadPlusMaybe)($$new.x < 750.0 || ($$new.y < level.exit - level.door / 2.0 || $$new.y > level.exit + level.door / 2.0)))(function () {
                                  return Prelude["return"](Data_Maybe.applicativeMaybe)($$new);
                              });
                          };
                      };
                  };
              };
              var lightGreen = Graphics_Drawing_Color.lighten(0.7)(Graphics_Drawing_Color.green);
              var renderPath = function (path) {
                  if (Prelude.not(Prelude.booleanAlgebraFn(Prelude.booleanAlgebraBoolean))(Data_List["null"])(path)) {
                      return Graphics_Drawing.outlined(Graphics_Drawing.outlineColor(lightGreen))(Graphics_Drawing.path(Data_List.foldableList)(path));
                  };
                  return Data_Monoid.mempty(Graphics_Drawing.monoidDrawing);
              };
              var initialState = function (levels_1) {
                  return new Waiting({
                      path: Data_List.Nil.value,
                      nextLevel: levels_1
                  });
              };
              var update = function (inputs) {
                  return function (elapsed) {
                      return function (_16) {
                          if (_16 instanceof Playing && _16.value0.path instanceof Data_List.Cons) {
                              if (testCollision(Data_Maybe_Unsafe.fromJust(Data_List_Lazy.head(_16.value0.level)))(_16.value0.path)) {
                                  return new Data_Either.Left(new Data_Tuple.Tuple(new Waiting({
                                      path: _16.value0.path,
                                      nextLevel: _16.value0.level
                                  }), newGame(_16.value0.level)));
                              };
                              if (Prelude["=="](Prelude.eqBoolean)(Prelude["=="](eqDirection)(_16.value0.direction)(Up.value))(inputs.space)) {
                                  var _54 = move(Data_Maybe_Unsafe.fromJust(Data_List_Lazy.head(_16.value0.level)))(_16.value0.path.value0)(inputs.space)(elapsed);
                                  if (_54 instanceof Data_Maybe.Just) {
                                      return Data_Either.Right.create(playing(new Data_List.Cons(_54.value0, _16.value0.path.value1))(_16.value0.level)(inputs));
                                  };
                                  if (_54 instanceof Data_Maybe.Nothing) {
                                      var next = Data_Maybe_Unsafe.fromJust(Data_List_Lazy.tail(_16.value0.level));
                                      return new Data_Either.Left(new Data_Tuple.Tuple(initialState(next), newGame(next)));
                                  };
                                  throw new Error("Failed pattern match at Main line 115, column 1 - line 241, column 8: " + [ _54.constructor.name ]);
                              };
                              if (Prelude.otherwise) {
                                  return Data_Either.Right.create(playing(new Data_List.Cons(_16.value0.path.value0, new Data_List.Cons(_16.value0.path.value0, _16.value0.path.value1)))(_16.value0.level)(inputs));
                              };
                          };
                          throw new Error("Failed pattern match at Main line 115, column 1 - line 241, column 8: " + [ inputs.constructor.name, elapsed.constructor.name, _16.constructor.name ]);
                      };
                  };
              };
              var clearCanvas = Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                  Graphics_Canvas.setFillStyle("#1B1C1B")(_11)();
                  return Graphics_Canvas.fillRect(_11)({
                      x: 0.0,
                      y: 0.0,
                      w: 800.0,
                      h: 500.0
                  })();
              });
              var background = function (levels_1) {
                  var level = Data_Maybe_Unsafe.fromJust(Data_List_Lazy.head(levels_1));
                  return Data_Foldable.fold(Data_Foldable.foldableArray)(Graphics_Drawing.monoidDrawing)([ Graphics_Drawing.outlined(Graphics_Drawing.outlineColor(lightGreen))(Prelude["<>"](Graphics_Drawing.semigroupShape)(Graphics_Drawing.rectangle(50.0)(50.0)(700.0)(400.0))(Graphics_Drawing.rectangle(45.0)(45.0)(710.0)(410.0))), Graphics_Drawing.filled(Graphics_Drawing.fillColor(lightGreen))(Prelude["<>"](Graphics_Drawing.semigroupShape)(Graphics_Drawing.rectangle(45.0)(level.entry - level.door / 2.0)(5.0)(level.door))(Graphics_Drawing.rectangle(750.0)(level.exit - level.door / 2.0)(5.0)(level.door))), Graphics_Drawing.shadow(Prelude["<>"](Graphics_Drawing.semigroupShadow)(Graphics_Drawing.shadowColor(Graphics_Drawing_Color.white))(Graphics_Drawing.shadowBlur(4.0)))(Data_Foldable.foldMap(Data_List.foldableList)(Graphics_Drawing.monoidDrawing)(function (star) {
                      return Graphics_Drawing.filled(Graphics_Drawing.fillColor(lightGreen))(Graphics_Drawing.circle(star.x)(star.y)(star.r));
                  })(level.stars)), Graphics_Drawing.text(vt323)(50.0)(40.0)(Graphics_Drawing.fillColor(lightGreen))("Level: " + Prelude.show(Prelude.showInt)(level.level)) ]);
              };
              var scene = function (_19) {
                  if (_19 instanceof Waiting) {
                      return Data_Foldable.fold(Data_Foldable.foldableArray)(Graphics_Drawing.monoidDrawing)([ background(_19.value0.nextLevel), renderPath(_19.value0.path), Graphics_Drawing.shadow(Prelude["<>"](Graphics_Drawing.semigroupShadow)(Graphics_Drawing.shadowColor(Graphics_Drawing_Color.black))(Graphics_Drawing.shadowBlur(8.0)))(Graphics_Drawing.text(vt323)(400.0 - _9.width / 2.0)(275.0)(Graphics_Drawing.fillColor(lightGreen))("Press Space to Start")) ]);
                  };
                  if (_19 instanceof Playing) {
                      return Data_Foldable.fold(Data_Foldable.foldableArray)(Graphics_Drawing.monoidDrawing)([ background(_19.value0.level), renderPath(_19.value0.path) ]);
                  };
                  throw new Error("Failed pattern match at Main line 115, column 1 - line 241, column 8: " + [ _19.constructor.name ]);
              };
              var loop = function (levels_1) {
                  var go = function (state) {
                      return function __do() {
                          var _8 = Data_Date.nowEpochMilliseconds();
                          var _7 = Control_Monad_Eff_Ref.readRef(_10)();
                          return DOM_RequestAnimationFrame.requestAnimationFrame(function __do() {
                              var _6 = Data_Date.nowEpochMilliseconds();
                              return (function () {
                                  var _66 = update(_7)(Prelude["-"](Data_Time.ringMilliseconds)(_6)(_8))(state);
                                  if (_66 instanceof Data_Either.Right) {
                                      return function __do() {
                                          clearCanvas();
                                          Graphics_Drawing.render(_11)(scene(_66.value0))();
                                          return go(_66.value0)();
                                      };
                                  };
                                  if (_66 instanceof Data_Either.Left) {
                                      return function __do() {
                                          clearCanvas();
                                          Graphics_Drawing.render(_11)(scene(_66.value0.value0))();
                                          return $foreign.onSpaceBarOnce(go(_66.value0.value1))();
                                      };
                                  };
                                  throw new Error("Failed pattern match at Main line 115, column 1 - line 241, column 8: " + [ _66.constructor.name ]);
                              })()();
                          })();
                      };
                  };
                  return function __do() {
                      clearCanvas();
                      Graphics_Drawing.render(_11)(scene(initialState(levels_1)))();
                      return $foreign.onSpaceBarOnce(go(newGame(levels_1)))();
                  };
              };
              return loop(levels);
          })()();
      };
      throw new Error("Failed pattern match at Main line 115, column 1 - line 241, column 8: " + [ _12.constructor.name ]);
  };
  exports["Playing"] = Playing;
  exports["Waiting"] = Waiting;
  exports["Up"] = Up;
  exports["Down"] = Down;
  exports["main"] = main;
  exports["levels"] = levels;
  exports["unsafeLevel"] = unsafeLevel;
  exports["clamp"] = clamp;
  exports["decay"] = decay;
  exports["subtract"] = subtract;
  exports["len2"] = len2;
  exports["dist2"] = dist2;
  exports["eqDirection"] = eqDirection;
  exports["onSpaceBarOnce"] = $foreign.onSpaceBarOnce;
  exports["onSpaceBar"] = $foreign.onSpaceBar;;

})(PS["Main"] = PS["Main"] || {});
